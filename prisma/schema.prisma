generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model addresses {
  id            Int            @id(map: "addresses_pk") @default(autoincrement())
  street        String         @db.VarChar(250)
  addressNumber String?        @db.VarChar(50)
  zipCode       String         @db.VarChar(8)
  neighborhood  String         @db.VarChar(250)
  complement    String?        @db.VarChar(250)
  cityName      String         @db.VarChar(250)
  state         states
  country       String         @default("BRASIL") @db.VarChar(100)
  customers     customers[]
  institutions  institutions[]
}

model customers {
  id            Int          @id(map: "customers_pk") @default(autoincrement())
  corporateName String       @db.VarChar(250)
  fantasyName   String       @db.VarChar(250)
  CNPJ          String       @unique @db.VarChar(14)
  email01       String       @db.VarChar(100)
  DDI01         String       @db.VarChar(5)
  DDD01         String       @db.VarChar(5)
  phoneNumber01 String       @db.VarChar(15)
  DDI02         String?      @db.VarChar(5)
  DDD02         String?      @db.VarChar(5)
  phoneNumber02 String?      @db.VarChar(15)
  inactive      Boolean      @default(false)
  createdAt     DateTime     @default(now()) @db.Timestamp(6)
  updatedAt     DateTime?    @updatedAt @db.Timestamp(6)
  mailboxId     Int
  addressId     Int
  institutionId Int
  addresses     addresses    @relation(fields: [addressId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "customers_addresses_fk")
  mailboxes     mailboxes    @relation(fields: [mailboxId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "customers_mailboxes_fk")
  institutions  institutions @relation(fields: [institutionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "customers_institutions_fk")
}

model institutions {
  id        Int         @id(map: "institutions_pk") @default(autoincrement())
  name      String      @db.VarChar(250)
  mailboxId Int
  addressId Int
  addresses addresses   @relation(fields: [addressId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "institutions_addresses_fk")
  mailboxes mailboxes   @relation(fields: [mailboxId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "institutions_mailboxes_fk")
  customers customers[]
}

model mailboxes {
  id           Int            @id(map: "mailboxes_pk") @default(autoincrement())
  host         String         @db.VarChar(100)
  password     String         @db.VarChar(50)
  port         String         @db.VarChar(5)
  email        String         @db.VarChar(100)
  lastDateRead DateTime?      @db.Timestamp(6)
  inactive     Boolean        @default(false)
  createdAt    DateTime       @default(now()) @db.Timestamp(6)
  updatedAt    DateTime?      @updatedAt @db.Timestamp(6)
  customers    customers[]
  institutions institutions[]
}

enum states {
  AC
  AL
  AP
  AM
  BA
  CE
  ES
  GO
  MA
  MG
  MS
  MT
  PA
  PB
  PE
  PI
  PR
  RJ
  RN
  RS
  RO
  RR
  SC
  SE
  SP
  TO
  DF
}
